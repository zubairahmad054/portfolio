{"ast":null,"code":"import { frame } from 'motion-dom';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { transformProps } from '../html/utils/keys-transform.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { updateSVGDimensions } from './utils/measure.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nconst layoutProps = [\"x\", \"y\", \"width\", \"height\", \"cx\", \"cy\", \"r\"];\nconst svgMotionConfig = {\n  useVisualState: makeUseVisualState({\n    scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n    createRenderState: createSvgRenderState,\n    onUpdate: _ref => {\n      let {\n        props,\n        prevProps,\n        current,\n        renderState,\n        latestValues\n      } = _ref;\n      if (!current) return;\n      let hasTransform = !!props.drag;\n      if (!hasTransform) {\n        for (const key in latestValues) {\n          if (transformProps.has(key)) {\n            hasTransform = true;\n            break;\n          }\n        }\n      }\n      if (!hasTransform) return;\n      let needsMeasure = !prevProps;\n      if (prevProps) {\n        /**\r\n         * Check the layout props for changes, if any are found we need to\r\n         * measure the element again.\r\n         */\n        for (let i = 0; i < layoutProps.length; i++) {\n          const key = layoutProps[i];\n          if (props[key] !== prevProps[key]) {\n            needsMeasure = true;\n          }\n        }\n      }\n      if (!needsMeasure) return;\n      frame.read(() => {\n        updateSVGDimensions(current, renderState);\n        frame.render(() => {\n          buildSVGAttrs(renderState, latestValues, isSVGTag(current.tagName), props.transformTemplate);\n          renderSVG(current, renderState);\n        });\n      });\n    }\n  })\n};\nexport { svgMotionConfig };","map":{"version":3,"names":["frame","makeUseVisualState","transformProps","buildSVGAttrs","createSvgRenderState","isSVGTag","updateSVGDimensions","renderSVG","scrapeMotionValuesFromProps","layoutProps","svgMotionConfig","useVisualState","createRenderState","onUpdate","_ref","props","prevProps","current","renderState","latestValues","hasTransform","drag","key","has","needsMeasure","i","length","read","render","tagName","transformTemplate"],"sources":["D:/portfolio-master/node_modules/framer-motion/dist/es/render/svg/config-motion.mjs"],"sourcesContent":["import { frame } from 'motion-dom';\r\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\r\nimport { transformProps } from '../html/utils/keys-transform.mjs';\r\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\r\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\r\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\r\nimport { updateSVGDimensions } from './utils/measure.mjs';\r\nimport { renderSVG } from './utils/render.mjs';\r\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\r\n\r\nconst layoutProps = [\"x\", \"y\", \"width\", \"height\", \"cx\", \"cy\", \"r\"];\r\nconst svgMotionConfig = {\r\n    useVisualState: makeUseVisualState({\r\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\r\n        createRenderState: createSvgRenderState,\r\n        onUpdate: ({ props, prevProps, current, renderState, latestValues, }) => {\r\n            if (!current)\r\n                return;\r\n            let hasTransform = !!props.drag;\r\n            if (!hasTransform) {\r\n                for (const key in latestValues) {\r\n                    if (transformProps.has(key)) {\r\n                        hasTransform = true;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            if (!hasTransform)\r\n                return;\r\n            let needsMeasure = !prevProps;\r\n            if (prevProps) {\r\n                /**\r\n                 * Check the layout props for changes, if any are found we need to\r\n                 * measure the element again.\r\n                 */\r\n                for (let i = 0; i < layoutProps.length; i++) {\r\n                    const key = layoutProps[i];\r\n                    if (props[key] !==\r\n                        prevProps[key]) {\r\n                        needsMeasure = true;\r\n                    }\r\n                }\r\n            }\r\n            if (!needsMeasure)\r\n                return;\r\n            frame.read(() => {\r\n                updateSVGDimensions(current, renderState);\r\n                frame.render(() => {\r\n                    buildSVGAttrs(renderState, latestValues, isSVGTag(current.tagName), props.transformTemplate);\r\n                    renderSVG(current, renderState);\r\n                });\r\n            });\r\n        },\r\n    }),\r\n};\r\n\r\nexport { svgMotionConfig };\r\n"],"mappings":"AAAA,SAASA,KAAK,QAAQ,YAAY;AAClC,SAASC,kBAAkB,QAAQ,yCAAyC;AAC5E,SAASC,cAAc,QAAQ,kCAAkC;AACjE,SAASC,aAAa,QAAQ,yBAAyB;AACvD,SAASC,oBAAoB,QAAQ,iCAAiC;AACtE,SAASC,QAAQ,QAAQ,wBAAwB;AACjD,SAASC,mBAAmB,QAAQ,qBAAqB;AACzD,SAASC,SAAS,QAAQ,oBAAoB;AAC9C,SAASC,2BAA2B,QAAQ,kCAAkC;AAE9E,MAAMC,WAAW,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,CAAC;AAClE,MAAMC,eAAe,GAAG;EACpBC,cAAc,EAAEV,kBAAkB,CAAC;IAC/BO,2BAA2B,EAAEA,2BAA2B;IACxDI,iBAAiB,EAAER,oBAAoB;IACvCS,QAAQ,EAAEC,IAAA,IAA+D;MAAA,IAA9D;QAAEC,KAAK;QAAEC,SAAS;QAAEC,OAAO;QAAEC,WAAW;QAAEC;MAAc,CAAC,GAAAL,IAAA;MAChE,IAAI,CAACG,OAAO,EACR;MACJ,IAAIG,YAAY,GAAG,CAAC,CAACL,KAAK,CAACM,IAAI;MAC/B,IAAI,CAACD,YAAY,EAAE;QACf,KAAK,MAAME,GAAG,IAAIH,YAAY,EAAE;UAC5B,IAAIjB,cAAc,CAACqB,GAAG,CAACD,GAAG,CAAC,EAAE;YACzBF,YAAY,GAAG,IAAI;YACnB;UACJ;QACJ;MACJ;MACA,IAAI,CAACA,YAAY,EACb;MACJ,IAAII,YAAY,GAAG,CAACR,SAAS;MAC7B,IAAIA,SAAS,EAAE;QACX;AAChB;AACA;AACA;QACgB,KAAK,IAAIS,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGhB,WAAW,CAACiB,MAAM,EAAED,CAAC,EAAE,EAAE;UACzC,MAAMH,GAAG,GAAGb,WAAW,CAACgB,CAAC,CAAC;UAC1B,IAAIV,KAAK,CAACO,GAAG,CAAC,KACVN,SAAS,CAACM,GAAG,CAAC,EAAE;YAChBE,YAAY,GAAG,IAAI;UACvB;QACJ;MACJ;MACA,IAAI,CAACA,YAAY,EACb;MACJxB,KAAK,CAAC2B,IAAI,CAAC,MAAM;QACbrB,mBAAmB,CAACW,OAAO,EAAEC,WAAW,CAAC;QACzClB,KAAK,CAAC4B,MAAM,CAAC,MAAM;UACfzB,aAAa,CAACe,WAAW,EAAEC,YAAY,EAAEd,QAAQ,CAACY,OAAO,CAACY,OAAO,CAAC,EAAEd,KAAK,CAACe,iBAAiB,CAAC;UAC5FvB,SAAS,CAACU,OAAO,EAAEC,WAAW,CAAC;QACnC,CAAC,CAAC;MACN,CAAC,CAAC;IACN;EACJ,CAAC;AACL,CAAC;AAED,SAASR,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}