{"ast":null,"code":"import { NativeAnimationControls, isGenerator, createGeneratorEasing, supportsLinearEasing } from 'motion-dom';\nimport { invariant, secondsToMilliseconds } from 'motion-utils';\nimport { startWaapiAnimation } from './index.mjs';\nimport { browserNumberValueTypes } from '../../../render/dom/value-types/number-browser.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { setCSSVar, setStyle } from './utils/style.mjs';\nimport { supportsPartialKeyframes } from './utils/supports-partial-keyframes.mjs';\nimport { supportsWaapi } from './utils/supports-waapi.mjs';\nconst state = new WeakMap();\nfunction hydrateKeyframes(valueName, keyframes, read) {\n  for (let i = 0; i < keyframes.length; i++) {\n    if (keyframes[i] === null) {\n      keyframes[i] = i === 0 ? read() : keyframes[i - 1];\n    }\n    if (typeof keyframes[i] === \"number\" && browserNumberValueTypes[valueName]) {\n      keyframes[i] = browserNumberValueTypes[valueName].transform(keyframes[i]);\n    }\n  }\n  if (!supportsPartialKeyframes() && keyframes.length < 2) {\n    keyframes.unshift(read());\n  }\n}\nconst defaultEasing = \"easeOut\";\nfunction getElementAnimationState(element) {\n  const animationState = state.get(element) || new Map();\n  state.set(element, animationState);\n  return state.get(element);\n}\nclass NativeAnimation extends NativeAnimationControls {\n  constructor(element, valueName, valueKeyframes, options) {\n    const isCSSVar = valueName.startsWith(\"--\");\n    invariant(typeof options.type !== \"string\", `animateMini doesn't support \"type\" as a string. Did you mean to import { spring } from \"framer-motion\"?`);\n    const existingAnimation = getElementAnimationState(element).get(valueName);\n    existingAnimation && existingAnimation.stop();\n    const readInitialKeyframe = () => {\n      return valueName.startsWith(\"--\") ? element.style.getPropertyValue(valueName) : window.getComputedStyle(element)[valueName];\n    };\n    if (!Array.isArray(valueKeyframes)) {\n      valueKeyframes = [valueKeyframes];\n    }\n    hydrateKeyframes(valueName, valueKeyframes, readInitialKeyframe);\n    // TODO: Replace this with toString()?\n    if (isGenerator(options.type)) {\n      const generatorOptions = createGeneratorEasing(options, 100, options.type);\n      options.ease = supportsLinearEasing() ? generatorOptions.ease : defaultEasing;\n      options.duration = secondsToMilliseconds(generatorOptions.duration);\n      options.type = \"keyframes\";\n    } else {\n      options.ease = options.ease || defaultEasing;\n    }\n    const onFinish = () => {\n      this.setValue(element, valueName, getFinalKeyframe(valueKeyframes, options));\n      this.cancel();\n      this.resolveFinishedPromise();\n    };\n    const init = () => {\n      this.setValue = isCSSVar ? setCSSVar : setStyle;\n      this.options = options;\n      this.updateFinishedPromise();\n      this.removeAnimation = () => {\n        const elementState = state.get(element);\n        elementState && elementState.delete(valueName);\n      };\n    };\n    if (!supportsWaapi()) {\n      super();\n      init();\n      onFinish();\n    } else {\n      super(startWaapiAnimation(element, valueName, valueKeyframes, options));\n      init();\n      if (options.autoplay === false) {\n        this.animation.pause();\n      }\n      this.animation.onfinish = onFinish;\n      getElementAnimationState(element).set(valueName, this);\n    }\n  }\n  /**\r\n   * Allows the returned animation to be awaited or promise-chained. Currently\r\n   * resolves when the animation finishes at all but in a future update could/should\r\n   * reject if its cancels.\r\n   */\n  then(resolve, reject) {\n    return this.currentFinishedPromise.then(resolve, reject);\n  }\n  updateFinishedPromise() {\n    this.currentFinishedPromise = new Promise(resolve => {\n      this.resolveFinishedPromise = resolve;\n    });\n  }\n  play() {\n    if (this.state === \"finished\") {\n      this.updateFinishedPromise();\n    }\n    super.play();\n  }\n  cancel() {\n    this.removeAnimation();\n    super.cancel();\n  }\n}\nexport { NativeAnimation };","map":{"version":3,"names":["NativeAnimationControls","isGenerator","createGeneratorEasing","supportsLinearEasing","invariant","secondsToMilliseconds","startWaapiAnimation","browserNumberValueTypes","getFinalKeyframe","setCSSVar","setStyle","supportsPartialKeyframes","supportsWaapi","state","WeakMap","hydrateKeyframes","valueName","keyframes","read","i","length","transform","unshift","defaultEasing","getElementAnimationState","element","animationState","get","Map","set","NativeAnimation","constructor","valueKeyframes","options","isCSSVar","startsWith","type","existingAnimation","stop","readInitialKeyframe","style","getPropertyValue","window","getComputedStyle","Array","isArray","generatorOptions","ease","duration","onFinish","setValue","cancel","resolveFinishedPromise","init","updateFinishedPromise","removeAnimation","elementState","delete","autoplay","animation","pause","onfinish","then","resolve","reject","currentFinishedPromise","Promise","play"],"sources":["D:/portfolio-master/node_modules/framer-motion/dist/es/animation/animators/waapi/NativeAnimation.mjs"],"sourcesContent":["import { NativeAnimationControls, isGenerator, createGeneratorEasing, supportsLinearEasing } from 'motion-dom';\r\nimport { invariant, secondsToMilliseconds } from 'motion-utils';\r\nimport { startWaapiAnimation } from './index.mjs';\r\nimport { browserNumberValueTypes } from '../../../render/dom/value-types/number-browser.mjs';\r\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\r\nimport { setCSSVar, setStyle } from './utils/style.mjs';\r\nimport { supportsPartialKeyframes } from './utils/supports-partial-keyframes.mjs';\r\nimport { supportsWaapi } from './utils/supports-waapi.mjs';\r\n\r\nconst state = new WeakMap();\r\nfunction hydrateKeyframes(valueName, keyframes, read) {\r\n    for (let i = 0; i < keyframes.length; i++) {\r\n        if (keyframes[i] === null) {\r\n            keyframes[i] = i === 0 ? read() : keyframes[i - 1];\r\n        }\r\n        if (typeof keyframes[i] === \"number\" &&\r\n            browserNumberValueTypes[valueName]) {\r\n            keyframes[i] = browserNumberValueTypes[valueName].transform(keyframes[i]);\r\n        }\r\n    }\r\n    if (!supportsPartialKeyframes() && keyframes.length < 2) {\r\n        keyframes.unshift(read());\r\n    }\r\n}\r\nconst defaultEasing = \"easeOut\";\r\nfunction getElementAnimationState(element) {\r\n    const animationState = state.get(element) || new Map();\r\n    state.set(element, animationState);\r\n    return state.get(element);\r\n}\r\nclass NativeAnimation extends NativeAnimationControls {\r\n    constructor(element, valueName, valueKeyframes, options) {\r\n        const isCSSVar = valueName.startsWith(\"--\");\r\n        invariant(typeof options.type !== \"string\", `animateMini doesn't support \"type\" as a string. Did you mean to import { spring } from \"framer-motion\"?`);\r\n        const existingAnimation = getElementAnimationState(element).get(valueName);\r\n        existingAnimation && existingAnimation.stop();\r\n        const readInitialKeyframe = () => {\r\n            return valueName.startsWith(\"--\")\r\n                ? element.style.getPropertyValue(valueName)\r\n                : window.getComputedStyle(element)[valueName];\r\n        };\r\n        if (!Array.isArray(valueKeyframes)) {\r\n            valueKeyframes = [valueKeyframes];\r\n        }\r\n        hydrateKeyframes(valueName, valueKeyframes, readInitialKeyframe);\r\n        // TODO: Replace this with toString()?\r\n        if (isGenerator(options.type)) {\r\n            const generatorOptions = createGeneratorEasing(options, 100, options.type);\r\n            options.ease = supportsLinearEasing()\r\n                ? generatorOptions.ease\r\n                : defaultEasing;\r\n            options.duration = secondsToMilliseconds(generatorOptions.duration);\r\n            options.type = \"keyframes\";\r\n        }\r\n        else {\r\n            options.ease = options.ease || defaultEasing;\r\n        }\r\n        const onFinish = () => {\r\n            this.setValue(element, valueName, getFinalKeyframe(valueKeyframes, options));\r\n            this.cancel();\r\n            this.resolveFinishedPromise();\r\n        };\r\n        const init = () => {\r\n            this.setValue = isCSSVar ? setCSSVar : setStyle;\r\n            this.options = options;\r\n            this.updateFinishedPromise();\r\n            this.removeAnimation = () => {\r\n                const elementState = state.get(element);\r\n                elementState && elementState.delete(valueName);\r\n            };\r\n        };\r\n        if (!supportsWaapi()) {\r\n            super();\r\n            init();\r\n            onFinish();\r\n        }\r\n        else {\r\n            super(startWaapiAnimation(element, valueName, valueKeyframes, options));\r\n            init();\r\n            if (options.autoplay === false) {\r\n                this.animation.pause();\r\n            }\r\n            this.animation.onfinish = onFinish;\r\n            getElementAnimationState(element).set(valueName, this);\r\n        }\r\n    }\r\n    /**\r\n     * Allows the returned animation to be awaited or promise-chained. Currently\r\n     * resolves when the animation finishes at all but in a future update could/should\r\n     * reject if its cancels.\r\n     */\r\n    then(resolve, reject) {\r\n        return this.currentFinishedPromise.then(resolve, reject);\r\n    }\r\n    updateFinishedPromise() {\r\n        this.currentFinishedPromise = new Promise((resolve) => {\r\n            this.resolveFinishedPromise = resolve;\r\n        });\r\n    }\r\n    play() {\r\n        if (this.state === \"finished\") {\r\n            this.updateFinishedPromise();\r\n        }\r\n        super.play();\r\n    }\r\n    cancel() {\r\n        this.removeAnimation();\r\n        super.cancel();\r\n    }\r\n}\r\n\r\nexport { NativeAnimation };\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}