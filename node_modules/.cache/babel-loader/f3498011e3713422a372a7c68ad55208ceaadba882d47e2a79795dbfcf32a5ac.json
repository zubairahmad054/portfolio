{"ast":null,"code":"import { progress } from 'motion-utils';\nconst generateLinearEasing = function (easing, duration) {\n  let resolution = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 10;\n  let points = \"\";\n  const numPoints = Math.max(Math.round(duration / resolution), 2);\n  for (let i = 0; i < numPoints; i++) {\n    points += easing(progress(0, numPoints - 1, i)) + \", \";\n  }\n  return `linear(${points.substring(0, points.length - 2)})`;\n};\nexport { generateLinearEasing };","map":{"version":3,"names":["progress","generateLinearEasing","easing","duration","resolution","arguments","length","undefined","points","numPoints","Math","max","round","i","substring"],"sources":["D:/portfolio-master/node_modules/motion-dom/dist/es/animation/waapi/utils/linear.mjs"],"sourcesContent":["import { progress } from 'motion-utils';\r\n\r\nconst generateLinearEasing = (easing, duration, // as milliseconds\r\nresolution = 10 // as milliseconds\r\n) => {\r\n    let points = \"\";\r\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\r\n    for (let i = 0; i < numPoints; i++) {\r\n        points += easing(progress(0, numPoints - 1, i)) + \", \";\r\n    }\r\n    return `linear(${points.substring(0, points.length - 2)})`;\r\n};\r\n\r\nexport { generateLinearEasing };\r\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,cAAc;AAEvC,MAAMC,oBAAoB,GAAG,SAAAA,CAACC,MAAM,EAAEC,QAAQ,EAEzC;EAAA,IADLC,UAAU,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;EAEX,IAAIG,MAAM,GAAG,EAAE;EACf,MAAMC,SAAS,GAAGC,IAAI,CAACC,GAAG,CAACD,IAAI,CAACE,KAAK,CAACT,QAAQ,GAAGC,UAAU,CAAC,EAAE,CAAC,CAAC;EAChE,KAAK,IAAIS,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,SAAS,EAAEI,CAAC,EAAE,EAAE;IAChCL,MAAM,IAAIN,MAAM,CAACF,QAAQ,CAAC,CAAC,EAAES,SAAS,GAAG,CAAC,EAAEI,CAAC,CAAC,CAAC,GAAG,IAAI;EAC1D;EACA,OAAO,UAAUL,MAAM,CAACM,SAAS,CAAC,CAAC,EAAEN,MAAM,CAACF,MAAM,GAAG,CAAC,CAAC,GAAG;AAC9D,CAAC;AAED,SAASL,oBAAoB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}