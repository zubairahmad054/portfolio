{"ast":null,"code":"import { supportsScrollTimeline } from 'motion-dom';\nimport { noop } from 'motion-utils';\nimport { observeTimeline } from './observe.mjs';\nimport { scrollInfo } from './track.mjs';\nfunction scrollTimelineFallback({\n  source,\n  container,\n  axis = \"y\"\n}) {\n  // Support legacy source argument. Deprecate later.\n  if (source) container = source;\n  // ScrollTimeline records progress as a percentage CSSUnitValue\n  const currentTime = {\n    value: 0\n  };\n  const cancel = scrollInfo(info => {\n    currentTime.value = info[axis].progress * 100;\n  }, {\n    container,\n    axis\n  });\n  return {\n    currentTime,\n    cancel\n  };\n}\nconst timelineCache = new Map();\nfunction getTimeline({\n  source,\n  container = document.documentElement,\n  axis = \"y\"\n} = {}) {\n  // Support legacy source argument. Deprecate later.\n  if (source) container = source;\n  if (!timelineCache.has(container)) {\n    timelineCache.set(container, {});\n  }\n  const elementCache = timelineCache.get(container);\n  if (!elementCache[axis]) {\n    elementCache[axis] = supportsScrollTimeline() ? new ScrollTimeline({\n      source: container,\n      axis\n    }) : scrollTimelineFallback({\n      source: container,\n      axis\n    });\n  }\n  return elementCache[axis];\n}\n/**\r\n * If the onScroll function has two arguments, it's expecting\r\n * more specific information about the scroll from scrollInfo.\r\n */\nfunction isOnScrollWithInfo(onScroll) {\n  return onScroll.length === 2;\n}\n/**\r\n * Currently, we only support element tracking with `scrollInfo`, though in\r\n * the future we can also offer ViewTimeline support.\r\n */\nfunction needsElementTracking(options) {\n  return options && (options.target || options.offset);\n}\nfunction scrollFunction(onScroll, options) {\n  if (isOnScrollWithInfo(onScroll) || needsElementTracking(options)) {\n    return scrollInfo(info => {\n      onScroll(info[options.axis].progress, info);\n    }, options);\n  } else {\n    return observeTimeline(onScroll, getTimeline(options));\n  }\n}\nfunction scrollAnimation(animation, options) {\n  animation.flatten();\n  if (needsElementTracking(options)) {\n    animation.pause();\n    return scrollInfo(info => {\n      animation.time = animation.duration * info[options.axis].progress;\n    }, options);\n  } else {\n    const timeline = getTimeline(options);\n    if (animation.attachTimeline) {\n      return animation.attachTimeline(timeline, valueAnimation => {\n        valueAnimation.pause();\n        return observeTimeline(progress => {\n          valueAnimation.time = valueAnimation.duration * progress;\n        }, timeline);\n      });\n    } else {\n      return noop;\n    }\n  }\n}\nfunction scroll(onScroll, {\n  axis = \"y\",\n  ...options\n} = {}) {\n  const optionsWithDefaults = {\n    axis,\n    ...options\n  };\n  return typeof onScroll === \"function\" ? scrollFunction(onScroll, optionsWithDefaults) : scrollAnimation(onScroll, optionsWithDefaults);\n}\nexport { scroll };","map":{"version":3,"names":["supportsScrollTimeline","noop","observeTimeline","scrollInfo","scrollTimelineFallback","source","container","axis","currentTime","value","cancel","info","progress","timelineCache","Map","getTimeline","document","documentElement","has","set","elementCache","get","ScrollTimeline","isOnScrollWithInfo","onScroll","length","needsElementTracking","options","target","offset","scrollFunction","scrollAnimation","animation","flatten","pause","time","duration","timeline","attachTimeline","valueAnimation","scroll","optionsWithDefaults"],"sources":["D:/portfolio-master/node_modules/framer-motion/dist/es/render/dom/scroll/index.mjs"],"sourcesContent":["import { supportsScrollTimeline } from 'motion-dom';\r\nimport { noop } from 'motion-utils';\r\nimport { observeTimeline } from './observe.mjs';\r\nimport { scrollInfo } from './track.mjs';\r\n\r\nfunction scrollTimelineFallback({ source, container, axis = \"y\", }) {\r\n    // Support legacy source argument. Deprecate later.\r\n    if (source)\r\n        container = source;\r\n    // ScrollTimeline records progress as a percentage CSSUnitValue\r\n    const currentTime = { value: 0 };\r\n    const cancel = scrollInfo((info) => {\r\n        currentTime.value = info[axis].progress * 100;\r\n    }, { container, axis });\r\n    return { currentTime, cancel };\r\n}\r\nconst timelineCache = new Map();\r\nfunction getTimeline({ source, container = document.documentElement, axis = \"y\", } = {}) {\r\n    // Support legacy source argument. Deprecate later.\r\n    if (source)\r\n        container = source;\r\n    if (!timelineCache.has(container)) {\r\n        timelineCache.set(container, {});\r\n    }\r\n    const elementCache = timelineCache.get(container);\r\n    if (!elementCache[axis]) {\r\n        elementCache[axis] = supportsScrollTimeline()\r\n            ? new ScrollTimeline({ source: container, axis })\r\n            : scrollTimelineFallback({ source: container, axis });\r\n    }\r\n    return elementCache[axis];\r\n}\r\n/**\r\n * If the onScroll function has two arguments, it's expecting\r\n * more specific information about the scroll from scrollInfo.\r\n */\r\nfunction isOnScrollWithInfo(onScroll) {\r\n    return onScroll.length === 2;\r\n}\r\n/**\r\n * Currently, we only support element tracking with `scrollInfo`, though in\r\n * the future we can also offer ViewTimeline support.\r\n */\r\nfunction needsElementTracking(options) {\r\n    return options && (options.target || options.offset);\r\n}\r\nfunction scrollFunction(onScroll, options) {\r\n    if (isOnScrollWithInfo(onScroll) || needsElementTracking(options)) {\r\n        return scrollInfo((info) => {\r\n            onScroll(info[options.axis].progress, info);\r\n        }, options);\r\n    }\r\n    else {\r\n        return observeTimeline(onScroll, getTimeline(options));\r\n    }\r\n}\r\nfunction scrollAnimation(animation, options) {\r\n    animation.flatten();\r\n    if (needsElementTracking(options)) {\r\n        animation.pause();\r\n        return scrollInfo((info) => {\r\n            animation.time = animation.duration * info[options.axis].progress;\r\n        }, options);\r\n    }\r\n    else {\r\n        const timeline = getTimeline(options);\r\n        if (animation.attachTimeline) {\r\n            return animation.attachTimeline(timeline, (valueAnimation) => {\r\n                valueAnimation.pause();\r\n                return observeTimeline((progress) => {\r\n                    valueAnimation.time = valueAnimation.duration * progress;\r\n                }, timeline);\r\n            });\r\n        }\r\n        else {\r\n            return noop;\r\n        }\r\n    }\r\n}\r\nfunction scroll(onScroll, { axis = \"y\", ...options } = {}) {\r\n    const optionsWithDefaults = { axis, ...options };\r\n    return typeof onScroll === \"function\"\r\n        ? scrollFunction(onScroll, optionsWithDefaults)\r\n        : scrollAnimation(onScroll, optionsWithDefaults);\r\n}\r\n\r\nexport { scroll };\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}