{"ast":null,"code":"import { isBezierDefinition } from 'motion-dom';\nimport { invariant, noop } from 'motion-utils';\nimport { anticipate } from '../anticipate.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nconst easingLookup = {\n  linear: noop,\n  easeIn,\n  easeInOut,\n  easeOut,\n  circIn,\n  circInOut,\n  circOut,\n  backIn,\n  backInOut,\n  backOut,\n  anticipate\n};\nconst easingDefinitionToFunction = definition => {\n  if (isBezierDefinition(definition)) {\n    // If cubic bezier definition, create bezier curve\n    invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n    const [x1, y1, x2, y2] = definition;\n    return cubicBezier(x1, y1, x2, y2);\n  } else if (typeof definition === \"string\") {\n    // Else lookup from table\n    invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n    return easingLookup[definition];\n  }\n  return definition;\n};\nexport { easingDefinitionToFunction };","map":{"version":3,"names":["isBezierDefinition","invariant","noop","anticipate","backIn","backInOut","backOut","circIn","circInOut","circOut","cubicBezier","easeIn","easeInOut","easeOut","easingLookup","linear","easingDefinitionToFunction","definition","length","x1","y1","x2","y2","undefined"],"sources":["D:/portfolio-master/node_modules/framer-motion/dist/es/easing/utils/map.mjs"],"sourcesContent":["import { isBezierDefinition } from 'motion-dom';\r\nimport { invariant, noop } from 'motion-utils';\r\nimport { anticipate } from '../anticipate.mjs';\r\nimport { backIn, backInOut, backOut } from '../back.mjs';\r\nimport { circIn, circInOut, circOut } from '../circ.mjs';\r\nimport { cubicBezier } from '../cubic-bezier.mjs';\r\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\r\n\r\nconst easingLookup = {\r\n    linear: noop,\r\n    easeIn,\r\n    easeInOut,\r\n    easeOut,\r\n    circIn,\r\n    circInOut,\r\n    circOut,\r\n    backIn,\r\n    backInOut,\r\n    backOut,\r\n    anticipate,\r\n};\r\nconst easingDefinitionToFunction = (definition) => {\r\n    if (isBezierDefinition(definition)) {\r\n        // If cubic bezier definition, create bezier curve\r\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\r\n        const [x1, y1, x2, y2] = definition;\r\n        return cubicBezier(x1, y1, x2, y2);\r\n    }\r\n    else if (typeof definition === \"string\") {\r\n        // Else lookup from table\r\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\r\n        return easingLookup[definition];\r\n    }\r\n    return definition;\r\n};\r\n\r\nexport { easingDefinitionToFunction };\r\n"],"mappings":"AAAA,SAASA,kBAAkB,QAAQ,YAAY;AAC/C,SAASC,SAAS,EAAEC,IAAI,QAAQ,cAAc;AAC9C,SAASC,UAAU,QAAQ,mBAAmB;AAC9C,SAASC,MAAM,EAAEC,SAAS,EAAEC,OAAO,QAAQ,aAAa;AACxD,SAASC,MAAM,EAAEC,SAAS,EAAEC,OAAO,QAAQ,aAAa;AACxD,SAASC,WAAW,QAAQ,qBAAqB;AACjD,SAASC,MAAM,EAAEC,SAAS,EAAEC,OAAO,QAAQ,aAAa;AAExD,MAAMC,YAAY,GAAG;EACjBC,MAAM,EAAEb,IAAI;EACZS,MAAM;EACNC,SAAS;EACTC,OAAO;EACPN,MAAM;EACNC,SAAS;EACTC,OAAO;EACPL,MAAM;EACNC,SAAS;EACTC,OAAO;EACPH;AACJ,CAAC;AACD,MAAMa,0BAA0B,GAAIC,UAAU,IAAK;EAC/C,IAAIjB,kBAAkB,CAACiB,UAAU,CAAC,EAAE;IAChC;IACAhB,SAAS,CAACgB,UAAU,CAACC,MAAM,KAAK,CAAC,EAAE,yDAAyD,CAAC;IAC7F,MAAM,CAACC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,CAAC,GAAGL,UAAU;IACnC,OAAOP,WAAW,CAACS,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,CAAC;EACtC,CAAC,MACI,IAAI,OAAOL,UAAU,KAAK,QAAQ,EAAE;IACrC;IACAhB,SAAS,CAACa,YAAY,CAACG,UAAU,CAAC,KAAKM,SAAS,EAAE,wBAAwBN,UAAU,GAAG,CAAC;IACxF,OAAOH,YAAY,CAACG,UAAU,CAAC;EACnC;EACA,OAAOA,UAAU;AACrB,CAAC;AAED,SAASD,0BAA0B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}