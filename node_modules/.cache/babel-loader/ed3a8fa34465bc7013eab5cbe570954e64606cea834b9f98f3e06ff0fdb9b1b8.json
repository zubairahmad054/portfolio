{"ast":null,"code":"import { frame, cancelFrame, frameData, time } from 'motion-dom';\nconst frameloopDriver = update => {\n  const passTimestamp = ({\n    timestamp\n  }) => update(timestamp);\n  return {\n    start: () => frame.update(passTimestamp, true),\n    stop: () => cancelFrame(passTimestamp),\n    /**\r\n     * If we're processing this frame we can use the\r\n     * framelocked timestamp to keep things in sync.\r\n     */\n    now: () => frameData.isProcessing ? frameData.timestamp : time.now()\n  };\n};\nexport { frameloopDriver };","map":{"version":3,"names":["frame","cancelFrame","frameData","time","frameloopDriver","update","passTimestamp","timestamp","start","stop","now","isProcessing"],"sources":["D:/portfolio-master/node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs"],"sourcesContent":["import { frame, cancelFrame, frameData, time } from 'motion-dom';\r\n\r\nconst frameloopDriver = (update) => {\r\n    const passTimestamp = ({ timestamp }) => update(timestamp);\r\n    return {\r\n        start: () => frame.update(passTimestamp, true),\r\n        stop: () => cancelFrame(passTimestamp),\r\n        /**\r\n         * If we're processing this frame we can use the\r\n         * framelocked timestamp to keep things in sync.\r\n         */\r\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\r\n    };\r\n};\r\n\r\nexport { frameloopDriver };\r\n"],"mappings":"AAAA,SAASA,KAAK,EAAEC,WAAW,EAAEC,SAAS,EAAEC,IAAI,QAAQ,YAAY;AAEhE,MAAMC,eAAe,GAAIC,MAAM,IAAK;EAChC,MAAMC,aAAa,GAAGA,CAAC;IAAEC;EAAU,CAAC,KAAKF,MAAM,CAACE,SAAS,CAAC;EAC1D,OAAO;IACHC,KAAK,EAAEA,CAAA,KAAMR,KAAK,CAACK,MAAM,CAACC,aAAa,EAAE,IAAI,CAAC;IAC9CG,IAAI,EAAEA,CAAA,KAAMR,WAAW,CAACK,aAAa,CAAC;IACtC;AACR;AACA;AACA;IACQI,GAAG,EAAEA,CAAA,KAAOR,SAAS,CAACS,YAAY,GAAGT,SAAS,CAACK,SAAS,GAAGJ,IAAI,CAACO,GAAG,CAAC;EACxE,CAAC;AACL,CAAC;AAED,SAASN,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}