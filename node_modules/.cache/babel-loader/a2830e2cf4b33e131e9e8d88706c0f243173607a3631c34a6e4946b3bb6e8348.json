{"ast":null,"code":"import { GroupPlaybackControls } from 'motion-dom';\nimport { animateSequence } from './sequence.mjs';\nimport { animateSubject } from './subject.mjs';\nfunction isSequence(value) {\n  return Array.isArray(value) && value.some(Array.isArray);\n}\n/**\r\n * Creates an animation function that is optionally scoped\r\n * to a specific element.\r\n */\nfunction createScopedAnimate(scope) {\n  /**\r\n   * Implementation\r\n   */\n  function scopedAnimate(subjectOrSequence, optionsOrKeyframes, options) {\n    let animations = [];\n    if (isSequence(subjectOrSequence)) {\n      animations = animateSequence(subjectOrSequence, optionsOrKeyframes, scope);\n    } else {\n      animations = animateSubject(subjectOrSequence, optionsOrKeyframes, options, scope);\n    }\n    const animation = new GroupPlaybackControls(animations);\n    if (scope) {\n      scope.animations.push(animation);\n    }\n    return animation;\n  }\n  return scopedAnimate;\n}\nconst animate = createScopedAnimate();\nexport { animate, createScopedAnimate };","map":{"version":3,"names":["GroupPlaybackControls","animateSequence","animateSubject","isSequence","value","Array","isArray","some","createScopedAnimate","scope","scopedAnimate","subjectOrSequence","optionsOrKeyframes","options","animations","animation","push","animate"],"sources":["D:/portfolio-master/node_modules/framer-motion/dist/es/animation/animate/index.mjs"],"sourcesContent":["import { GroupPlaybackControls } from 'motion-dom';\r\nimport { animateSequence } from './sequence.mjs';\r\nimport { animateSubject } from './subject.mjs';\r\n\r\nfunction isSequence(value) {\r\n    return Array.isArray(value) && value.some(Array.isArray);\r\n}\r\n/**\r\n * Creates an animation function that is optionally scoped\r\n * to a specific element.\r\n */\r\nfunction createScopedAnimate(scope) {\r\n    /**\r\n     * Implementation\r\n     */\r\n    function scopedAnimate(subjectOrSequence, optionsOrKeyframes, options) {\r\n        let animations = [];\r\n        if (isSequence(subjectOrSequence)) {\r\n            animations = animateSequence(subjectOrSequence, optionsOrKeyframes, scope);\r\n        }\r\n        else {\r\n            animations = animateSubject(subjectOrSequence, optionsOrKeyframes, options, scope);\r\n        }\r\n        const animation = new GroupPlaybackControls(animations);\r\n        if (scope) {\r\n            scope.animations.push(animation);\r\n        }\r\n        return animation;\r\n    }\r\n    return scopedAnimate;\r\n}\r\nconst animate = createScopedAnimate();\r\n\r\nexport { animate, createScopedAnimate };\r\n"],"mappings":"AAAA,SAASA,qBAAqB,QAAQ,YAAY;AAClD,SAASC,eAAe,QAAQ,gBAAgB;AAChD,SAASC,cAAc,QAAQ,eAAe;AAE9C,SAASC,UAAUA,CAACC,KAAK,EAAE;EACvB,OAAOC,KAAK,CAACC,OAAO,CAACF,KAAK,CAAC,IAAIA,KAAK,CAACG,IAAI,CAACF,KAAK,CAACC,OAAO,CAAC;AAC5D;AACA;AACA;AACA;AACA;AACA,SAASE,mBAAmBA,CAACC,KAAK,EAAE;EAChC;AACJ;AACA;EACI,SAASC,aAAaA,CAACC,iBAAiB,EAAEC,kBAAkB,EAAEC,OAAO,EAAE;IACnE,IAAIC,UAAU,GAAG,EAAE;IACnB,IAAIX,UAAU,CAACQ,iBAAiB,CAAC,EAAE;MAC/BG,UAAU,GAAGb,eAAe,CAACU,iBAAiB,EAAEC,kBAAkB,EAAEH,KAAK,CAAC;IAC9E,CAAC,MACI;MACDK,UAAU,GAAGZ,cAAc,CAACS,iBAAiB,EAAEC,kBAAkB,EAAEC,OAAO,EAAEJ,KAAK,CAAC;IACtF;IACA,MAAMM,SAAS,GAAG,IAAIf,qBAAqB,CAACc,UAAU,CAAC;IACvD,IAAIL,KAAK,EAAE;MACPA,KAAK,CAACK,UAAU,CAACE,IAAI,CAACD,SAAS,CAAC;IACpC;IACA,OAAOA,SAAS;EACpB;EACA,OAAOL,aAAa;AACxB;AACA,MAAMO,OAAO,GAAGT,mBAAmB,CAAC,CAAC;AAErC,SAASS,OAAO,EAAET,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}