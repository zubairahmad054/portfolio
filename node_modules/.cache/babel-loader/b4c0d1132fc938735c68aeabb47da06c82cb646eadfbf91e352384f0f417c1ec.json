{"ast":null,"code":"import { secondsToMilliseconds } from 'motion-utils';\nimport { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { createGeneratorEasing } from '../../generators/utils/create-generator-easing.mjs';\nimport { isGenerator } from '../../generators/utils/is-generator.mjs';\nimport { mapEasingToNativeEasing } from './easing.mjs';\nconst defaultEasing = \"easeOut\";\nfunction applyGeneratorOptions(options) {\n  var _a;\n  if (isGenerator(options.type)) {\n    const generatorOptions = createGeneratorEasing(options, 100, options.type);\n    options.ease = supportsLinearEasing() ? generatorOptions.ease : defaultEasing;\n    options.duration = secondsToMilliseconds(generatorOptions.duration);\n    options.type = \"keyframes\";\n  } else {\n    options.duration = secondsToMilliseconds((_a = options.duration) !== null && _a !== void 0 ? _a : 0.3);\n    options.ease = options.ease || defaultEasing;\n  }\n}\n// TODO: Reuse for NativeAnimation\nfunction convertMotionOptionsToNative(valueName, keyframes, options) {\n  var _a;\n  const nativeKeyframes = {};\n  const nativeOptions = {\n    fill: \"both\",\n    easing: \"linear\",\n    composite: \"replace\"\n  };\n  nativeOptions.delay = secondsToMilliseconds((_a = options.delay) !== null && _a !== void 0 ? _a : 0);\n  applyGeneratorOptions(options);\n  nativeOptions.duration = options.duration;\n  const {\n    ease,\n    times\n  } = options;\n  if (times) nativeKeyframes.offset = times;\n  nativeKeyframes[valueName] = keyframes;\n  const easing = mapEasingToNativeEasing(ease, options.duration);\n  /**\n   * If this is an easing array, apply to keyframes, not animation as a whole\n   */\n  if (Array.isArray(easing)) {\n    nativeKeyframes.easing = easing;\n  } else {\n    nativeOptions.easing = easing;\n  }\n  return {\n    keyframes: nativeKeyframes,\n    options: nativeOptions\n  };\n}\nexport { applyGeneratorOptions, convertMotionOptionsToNative };","map":{"version":3,"names":["secondsToMilliseconds","supportsLinearEasing","createGeneratorEasing","isGenerator","mapEasingToNativeEasing","defaultEasing","applyGeneratorOptions","options","_a","type","generatorOptions","ease","duration","convertMotionOptionsToNative","valueName","keyframes","nativeKeyframes","nativeOptions","fill","easing","composite","delay","times","offset","Array","isArray"],"sources":["D:/portfolio-master/node_modules/motion-dom/dist/es/animation/waapi/utils/convert-options.mjs"],"sourcesContent":["import { secondsToMilliseconds } from 'motion-utils';\nimport { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { createGeneratorEasing } from '../../generators/utils/create-generator-easing.mjs';\nimport { isGenerator } from '../../generators/utils/is-generator.mjs';\nimport { mapEasingToNativeEasing } from './easing.mjs';\n\nconst defaultEasing = \"easeOut\";\nfunction applyGeneratorOptions(options) {\n    var _a;\n    if (isGenerator(options.type)) {\n        const generatorOptions = createGeneratorEasing(options, 100, options.type);\n        options.ease = supportsLinearEasing()\n            ? generatorOptions.ease\n            : defaultEasing;\n        options.duration = secondsToMilliseconds(generatorOptions.duration);\n        options.type = \"keyframes\";\n    }\n    else {\n        options.duration = secondsToMilliseconds((_a = options.duration) !== null && _a !== void 0 ? _a : 0.3);\n        options.ease = options.ease || defaultEasing;\n    }\n}\n// TODO: Reuse for NativeAnimation\nfunction convertMotionOptionsToNative(valueName, keyframes, options) {\n    var _a;\n    const nativeKeyframes = {};\n    const nativeOptions = {\n        fill: \"both\",\n        easing: \"linear\",\n        composite: \"replace\",\n    };\n    nativeOptions.delay = secondsToMilliseconds((_a = options.delay) !== null && _a !== void 0 ? _a : 0);\n    applyGeneratorOptions(options);\n    nativeOptions.duration = options.duration;\n    const { ease, times } = options;\n    if (times)\n        nativeKeyframes.offset = times;\n    nativeKeyframes[valueName] = keyframes;\n    const easing = mapEasingToNativeEasing(ease, options.duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing)) {\n        nativeKeyframes.easing = easing;\n    }\n    else {\n        nativeOptions.easing = easing;\n    }\n    return {\n        keyframes: nativeKeyframes,\n        options: nativeOptions,\n    };\n}\n\nexport { applyGeneratorOptions, convertMotionOptionsToNative };\n"],"mappings":"AAAA,SAASA,qBAAqB,QAAQ,cAAc;AACpD,SAASC,oBAAoB,QAAQ,2CAA2C;AAChF,SAASC,qBAAqB,QAAQ,oDAAoD;AAC1F,SAASC,WAAW,QAAQ,yCAAyC;AACrE,SAASC,uBAAuB,QAAQ,cAAc;AAEtD,MAAMC,aAAa,GAAG,SAAS;AAC/B,SAASC,qBAAqBA,CAACC,OAAO,EAAE;EACpC,IAAIC,EAAE;EACN,IAAIL,WAAW,CAACI,OAAO,CAACE,IAAI,CAAC,EAAE;IAC3B,MAAMC,gBAAgB,GAAGR,qBAAqB,CAACK,OAAO,EAAE,GAAG,EAAEA,OAAO,CAACE,IAAI,CAAC;IAC1EF,OAAO,CAACI,IAAI,GAAGV,oBAAoB,CAAC,CAAC,GAC/BS,gBAAgB,CAACC,IAAI,GACrBN,aAAa;IACnBE,OAAO,CAACK,QAAQ,GAAGZ,qBAAqB,CAACU,gBAAgB,CAACE,QAAQ,CAAC;IACnEL,OAAO,CAACE,IAAI,GAAG,WAAW;EAC9B,CAAC,MACI;IACDF,OAAO,CAACK,QAAQ,GAAGZ,qBAAqB,CAAC,CAACQ,EAAE,GAAGD,OAAO,CAACK,QAAQ,MAAM,IAAI,IAAIJ,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG,GAAG,CAAC;IACtGD,OAAO,CAACI,IAAI,GAAGJ,OAAO,CAACI,IAAI,IAAIN,aAAa;EAChD;AACJ;AACA;AACA,SAASQ,4BAA4BA,CAACC,SAAS,EAAEC,SAAS,EAAER,OAAO,EAAE;EACjE,IAAIC,EAAE;EACN,MAAMQ,eAAe,GAAG,CAAC,CAAC;EAC1B,MAAMC,aAAa,GAAG;IAClBC,IAAI,EAAE,MAAM;IACZC,MAAM,EAAE,QAAQ;IAChBC,SAAS,EAAE;EACf,CAAC;EACDH,aAAa,CAACI,KAAK,GAAGrB,qBAAqB,CAAC,CAACQ,EAAE,GAAGD,OAAO,CAACc,KAAK,MAAM,IAAI,IAAIb,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG,CAAC,CAAC;EACpGF,qBAAqB,CAACC,OAAO,CAAC;EAC9BU,aAAa,CAACL,QAAQ,GAAGL,OAAO,CAACK,QAAQ;EACzC,MAAM;IAAED,IAAI;IAAEW;EAAM,CAAC,GAAGf,OAAO;EAC/B,IAAIe,KAAK,EACLN,eAAe,CAACO,MAAM,GAAGD,KAAK;EAClCN,eAAe,CAACF,SAAS,CAAC,GAAGC,SAAS;EACtC,MAAMI,MAAM,GAAGf,uBAAuB,CAACO,IAAI,EAAEJ,OAAO,CAACK,QAAQ,CAAC;EAC9D;AACJ;AACA;EACI,IAAIY,KAAK,CAACC,OAAO,CAACN,MAAM,CAAC,EAAE;IACvBH,eAAe,CAACG,MAAM,GAAGA,MAAM;EACnC,CAAC,MACI;IACDF,aAAa,CAACE,MAAM,GAAGA,MAAM;EACjC;EACA,OAAO;IACHJ,SAAS,EAAEC,eAAe;IAC1BT,OAAO,EAAEU;EACb,CAAC;AACL;AAEA,SAASX,qBAAqB,EAAEO,4BAA4B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}